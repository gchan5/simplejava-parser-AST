/* Generated By:JavaCC: Do not edit this line. simplejavaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface simplejavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 12;
  /** RegularExpression Id. */
  int DO = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int FALSE = 15;
  /** RegularExpression Id. */
  int FOR = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int RETURN = 20;
  /** RegularExpression Id. */
  int PLUS_EQUALS = 21;
  /** RegularExpression Id. */
  int NOT_EQUALS = 22;
  /** RegularExpression Id. */
  int EQUALS_EQUALS = 23;
  /** RegularExpression Id. */
  int LESS_THAN_EQUAL_TO = 24;
  /** RegularExpression Id. */
  int GREATER_THAN_EQUAL_TO = 25;
  /** RegularExpression Id. */
  int PLUS_PLUS = 26;
  /** RegularExpression Id. */
  int MINUS_MINUS = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int IDENTIFIER = 30;
  /** RegularExpression Id. */
  int EQUALS = 31;
  /** RegularExpression Id. */
  int PLUS = 32;
  /** RegularExpression Id. */
  int MINUS = 33;
  /** RegularExpression Id. */
  int ASTERISK = 34;
  /** RegularExpression Id. */
  int SLASH = 35;
  /** RegularExpression Id. */
  int LEFT_PARENTHESIS = 36;
  /** RegularExpression Id. */
  int RIGHT_PARENTHESIS = 37;
  /** RegularExpression Id. */
  int LEFT_BRACE = 38;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 39;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 40;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 41;
  /** RegularExpression Id. */
  int PERIOD = 42;
  /** RegularExpression Id. */
  int COMMA = 43;
  /** RegularExpression Id. */
  int SEMICOLON = 44;
  /** RegularExpression Id. */
  int LESS_THAN = 45;
  /** RegularExpression Id. */
  int GREATER_THAN = 46;
  /** RegularExpression Id. */
  int NOT = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 1;
  /** Lexical state. */
  int INLINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"//\"",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"/*\"",
    "\" \"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"\\n\"",
    "<token of kind 11>",
    "<INTEGER_LITERAL>",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"for\"",
    "\"if\"",
    "\"true\"",
    "\"while\"",
    "\"return\"",
    "\"+=\"",
    "\"!=\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"++\"",
    "\"--\"",
    "\"&&\"",
    "\"||\"",
    "<IDENTIFIER>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\"void main\"",
  };

}
